#!/bin/sh

read -p "enter the cPanel username: " cpuser
cd "/home/$cpuser/public_html"

sqldump=$(find . -name \*.sql -type f)

if [ -z $sqldump ];

then echo "No sql file, nothing to do"

else

wpconfig=$(find . -name wp-config.php -type f)
wpdb=$(cat wp-config.php | grep DB_NAME | cut -d \' -f 4)
wpuser=$(cat wp-config.php | grep DB_USER | cut -d \' -f 4)
newwpuser=$cpuser"_"$wpuser
newwpdb=$cpuser"_"$wpdb

dbusertbls=$(grep -Pzo '(?s)INTO .?user.? VALUES[^(]\K[^;]*' $sqldump | grep  -Pao '\(([^,]*,){1}\K[^,]*' | grep -Pzo [^\']);
dbusertbls=$(echo $dbusertbls | xargs -n1 | sort| uniq);

fi

for dbusertbl in $dbusertbls
do
        if [[ $dbusertbl != ${cpuser}\_* ]]
        then
                sed -i "/INTO \`user\` VALUES/ s/$dbusertbl\\b/${cpuser}\_${dbusertbl}/g" $sqldump
        fi
done

dbusers=$(grep -Pzo '(?s)INTO .?db.? VALUES[^(]\K[^;]*' $sqldump | grep -Pao '\(([^,]*,){2}\K[^,]*' | grep -Pzo [^\']);
dbnames=$(grep -Pzo '(?s)INTO .?db.? VALUES[^(]\K[^;]*' $sqldump | grep -Pao '\(([^,]*,){1}\K[^,]*' | grep -Pzo [^\']);
dbnames=$(echo $dbnames | xargs -n1 | sort| uniq);

for dbuser in $dbusers
do
        if [[ $dbuser != ${cpuser}\_* ]]
        then
                sed -i "/INTO \`db\` VALUES/ s/$dbuser\\b/${cpuser}\_${dbuser}/g" $sqldump
        fi
done

for dbname in $dbnames
do
if [[ $dbname != ${cpuser}\_* ]]
        then
                sed -i "/INTO \`db\` VALUES/ s/$dbname\\b/${cpuser}\_${dbname}/g" $sqldump
        fi
done

find . -name '*.sql' -exec sed -i "s/\\(CREATE DATABASE [^\`]*\`\\)/\\1${cpuser}_/" {} +
find . -name '*.sql' -exec sed -i "s/\\(USE [^\`]*\`\\)/\\1${cpuser}_/" {} +

#IMPORT THE DUMP

mysql -f -u root < ${sqldump}

#Map the DBs & users to a cpanel user

dbnames=($(grep $sqldump -Poe "CREATE DATABASE [^\`]*\`\K[^\`]*"))
for i in "${dbnames[@]}"; do /usr/local/cpanel/bin/dbmaptool $cpuser --type mysql --dbs $i; done

dbusers=($(grep -Pzo "(?s)INTO .?user.? VALUES[^(]\K[^;]*' $sqldump | grep  -Pao '\(([^,]*,){1}\K[^,]*"))
for i in "${dbusers[@]}"; do /usr/local/cpanel/bin/dbmaptool $cpuser --type mysql --dbusers $i; done

#Let's update the wordpress config if there is one

if [ -z $wpconfig ]; 

then echo "No WP Config, skipping section, migration completed"

else

find . -name 'wp-config.php' -exec sed -i -e "/DB_NAME/s/'$wpdb'/'$newwpdb'/" {} +
find . -name 'wp-config.php' -exec sed -i -e "/DB_USER/s/'$wpuser'/'$newwpuser'/" {} +

#Let's Check the wp-config new output (should be prefixed)

echo WP Config located at $wpconfig
echo WP DB is now showing as $wpdb
echo WP User is now showing as $wpuser
echo Migration completed

fi
